parameters:
  - name: azureServiceConnection
    type: string
  - name: artifactName
    type: string

jobs:
  - job: BuildAndTest
    displayName: Build and Test
    steps:
      - task: UsePythonVersion@0
        displayName: "Use Python 3.10"
        inputs:
          versionSpec: 3.10
          disableDownloadFromRegistry: true
      - script: |
          cd azure_functions
          pip3 install -r requirements-dev.txt
          pip3 install -r requirements.txt
        displayName: "Install requirements"

      - task: PowerShell@2
        displayName: "Run Bandit Checks"
        continueOnError: false
        inputs:
          errorActionPreference: stop
          targetType: inline
          script: |
            $env:PYTHONPATH += ";$(System.DefaultWorkingDirectory)"
            bandit -r indexer            
      - task: PowerShell@2
        displayName: "Run PyCodeStyle Checks"
        continueOnError: false
        inputs:
          errorActionPreference: continue
          targetType: inline
          script: |
            $env:PYTHONPATH += ";$(System.DefaultWorkingDirectory)"
            pycodestyle indexer/ --ignore=E501,W503            
      # - task: AzureCLI@2
      #   displayName: "Run Unit Tests and Code Coverage"
      #   continueOnError: false
      #   inputs:
      #     azureSubscription: ${{ parameters.azureServiceConnection }}
      #     scriptType: pscore
      #     failOnStandardError: false
      #     powerShellErrorActionPreference: "Stop"
      #     scriptLocation: "inlineScript"
      #     inlineScript: |
      #       cd azure_functions
      #       $env:PYTHONPATH += ";$(System.DefaultWorkingDirectory)"
      #       coverage run --rcfile=.coveragerc -m behave tests --junit --junit-directory $(System.DefaultWorkingDirectory)/reports/tabular
      #       coverage xml -o $(System.DefaultWorkingDirectory)/coverage.xml
      # - task: PublishTestResults@2
      #   inputs:
      #     testResultsFormat: "JUnit"
      #     testResultsFiles: "$(System.DefaultWorkingDirectory)/reports/**/TESTS-*.xml"
      #     failTaskOnFailedTests: true
      #     failTaskOnMissingResultsFile: true
      # - task: UseDotNet@2
      #   displayName: 'Use .NET Core sdk 7.0.x'
      #   inputs:
      #     version: 7.0.x
      # - task: PublishCodeCoverageResults@2
      #   inputs:          
      #     summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml
